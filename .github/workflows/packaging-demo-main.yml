name: FHIR Resource Generator
on:
  push:
    branches:
      - main
    paths:
      - 'packaging-demo/**'
      - 'simple/**'

jobs:
  changes:
    name: Find Changed Modules
    runs-on: ubuntu-latest
    outputs:
      changed_modules: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v3
    - name: Filter Changed Modules
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          packaging-demo:
            - 'packaging-demo/**'
          simple:
            - 'simple/**'

  Publish-Package-CodeArtifact:
    needs: changes
    if: ${{ needs.changes.outputs.changed_modules != '[]' }}
    name: package and publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module_name: ${{ fromJSON(needs.changes.outputs.changed_modules) }}
    env:
      working-directory: ./${{ matrix.module_name }}
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
    - name: Package with Poetry
      run: |
        poetry build
    - uses: aws-actions/setup-sam@v1
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Publish Package
      run: |
        export POETRY_HTTP_BASIC_ARTIFACT_USERNAME=aws
        export POETRY_HTTP_BASIC_ARTIFACT_PASSWORD=$(aws codeartifact get-authorization-token --domain gwt-interoperability-project --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --region us-east-1 --query authorizationToken --output text)
        poetry publish --repository artifact
